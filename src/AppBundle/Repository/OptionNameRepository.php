<?php

namespace AppBundle\Repository;

use Doctrine\ORM\Query;

/**
 * OptionNameRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class OptionNameRepository extends \Doctrine\ORM\EntityRepository
{
    public function findByName($name, $parameterId)
    {
        $option = $this->createQueryBuilder('option')
            ->join('option.parameter', 'parameter')
            ->where('parameter.id = :parameterId')
            ->setParameter('parameterId', $parameterId)
            ->andWhere('option.stringType = :name OR option.integerType = :name OR option.dateType = :name')
            ->setParameter('name', $name)
            ->getQuery()
            ->getResult();

        if ($option) {
            return $option[0];
        }

        return $option;
    }

    public function getByPost($postId)
    {
        return $this->createQueryBuilder('option')
            ->join('option.posts', 'post')
            ->where('post.id = :postId')
            ->setParameter('postId', $postId)
            ->getQuery()
            ->getResult();
    }

    public function getByParam($paramId)
    {
        return $this->createQueryBuilder('option')
            ->join('option.parameter', 'parameter')
            ->where('parameter.id = :paramId')
            ->setParameter('paramId', $paramId)
            ->getQuery()
            ->getResult();
    }

    public function findByMinMaxValue($parameter_id, $min_value = false, $max_value = false, $return_only_ids = false)
    {
        $options = $this->getByParam($parameter_id);
        if (!$options) {
            return null;
        }

        $result = [];
        $result_ids = [];
        foreach ($options as $option) {
            if ($min_value && $max_value) {
                if ($option->getName() >= $min_value && $option->getName() <= $max_value) {
                    $result []= $option;
                    $result_ids []= $option->getId();
                }
            } elseif (!$min_value && $max_value) {
                if ($option->getName() <= $max_value) {
                    $result []= $option;
                    $result_ids []= $option->getId();
                }
            } elseif ($min_value && !$max_value) {
                if ($option->getName() >= $min_value) {
                    $result []= $option;
                    $result_ids []= $option->getId();
                }
            }
        }

        if ($return_only_ids) {
            return $result_ids;
        }

        return $result;
    }

}
